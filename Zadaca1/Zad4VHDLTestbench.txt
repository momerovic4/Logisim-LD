LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.all;
USE ieee.numeric_std.ALL;

ENTITY testbench IS
END testbench;
--Testbench za 8bit-ni BarrelShifter
ARCHITECTURE behavior OF testbench IS 

	COMPONENT BarrelShifter8bit is
	PORT ( D : in STD_LOGIC_VECTOR(7 downto 0); --Ulaz
    	   S : in STD_LOGIC_VECTOR(2 downto 0); --Ulaz/Upravljacki signal
    	   Q : out STD_LOGIC_VECTOR(7 downto 0)); --Izlaz
	END COMPONENT;

	--Ulazi
	SIGNAL D :  std_logic_vector(7 downto 0) := (others=>'0');
	SIGNAL S :  std_logic_vector(2 downto 0) := (others=>'0');

	--Izlazi
	SIGNAL Q :  std_logic_vector(7 downto 0);

BEGIN

	DUT: BarrelShifter8bit PORT MAP(
		D => D,
		S => S,
		Q => Q
	);

	PROCESS
	BEGIN
    	--Pomjeri za 0 polja
		D <= "00000001";
		S <= "000";
       	wait for 1 ns;
        assert ( S = "00000001" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;
		--Pomjeri za 1 polja
		D <= "00000001";
		S <= "001";
        wait for 1 ns;
        assert ( S = "00000010" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;
		--Pomjeri za 2 polja
		D <= "00000001";
		S <= "010";
        wait for 1 ns;
        assert ( S = "00000100" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;
        --Pomjeri za 3 polja
		D <= "00000001";
		S <= "011";
        wait for 1 ns;
        assert ( S = "00001000" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;
        --Pomjeri za 4 polja
        D <= "00000001";
		S <= "100";
        wait for 1 ns;
        assert ( S = "00010000" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;
        --Pomjeri za 5 polja
        D <= "00000001";
		S <= "101";
        wait for 1 ns;
        assert ( S = "00100000" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;
		--Pomjeri za 6 polja
		D <= "00000001";
		S <= "110";
        wait for 1 ns;
        assert ( S = "01000000" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;
        --Pomjeri za 7 polja
        D <= "00000001";
		S <= "111";
        wait for 1 ns;
        assert ( S = "10000000" )report "Failed Case 1 - S" severity error;
		wait for 1 ns;

		wait; 
	END PROCESS;
END behavior;
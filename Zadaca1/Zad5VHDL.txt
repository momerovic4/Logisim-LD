library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity mux2to1 is --Kreiramo 2to1Mux koji koristimo
  PORT (  D0 : in STD_LOGIC; --Ulaz
          D1 : in STD_LOGIC; --Ulaz
            S  : in STD_LOGIC; --Ulaz
            R  : out STD_LOGIC); --Izlaz
end mux2to1;

architecture Behavioral of mux2to1 is
begin

  R <= D0 when (S = '0') else
         D1 ;

end Behavioral;

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Adder1bit is --Kreiramo jednobitni sabirac
  PORT (  A : in STD_LOGIC; --Ulaz
          B : in STD_LOGIC; --Ulaz
            CIN  : in STD_LOGIC; --Ulaz
            S  : out STD_LOGIC; --Izlaz
            COUT  : out STD_LOGIC); --Izlaz
end Adder1bit;

architecture Behavioral of Adder1bit is

component mux2to1
  PORT (  D0 : in STD_LOGIC; --Ulaz
          D1 : in STD_LOGIC; --Ulaz
            S  : in STD_LOGIC; --Ulaz
            R  : out STD_LOGIC); --Izlaz
end component;

signal c0 ,c1, c2,c3: STD_LOGIC; --Pomocni signali

begin
  c0 <= (A xor B);
    c1 <= (not(A xor B));
    c2 <= (A and B);
    c3 <= (A or B);
    --Mux1 je za odredjivanje Rezultata binarnog sabiranja
  mux1: mux2to1 port map (c0,c1,CIN,S);
    --Mux2 je za odredjivanje Ostatka kod binarnog sabiranja
    mux2: mux2to1 port map (c2,c3,CIN,COUT);
    
end Behavioral;


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Adder4bit is
  PORT( a, b  : in  STD_LOGIC_VECTOR(3 downto 0); --Ulaz
        s   : out STD_LOGIC_VECTOR(3 downto 0); --Izlaz
        cout  : out STD_LOGIC); --Izlaz
end Adder4bit;

architecture Behavioral of Adder4bit is

component Adder1bit
  PORT (  a : in STD_LOGIC; --Ulaz
          b : in STD_LOGIC; --Ulaz
            cin  : in STD_LOGIC; --Ulaz
            s  : out STD_LOGIC; --Izlaz
            cout  : out STD_LOGIC); --Izlaz
end component;

signal c0, c1, c2, c3 : STD_LOGIC; --pomocni signali

begin
  c0 <= '0';--pocetni ostatak je 0
  adder0: Adder1bit port map (a(0), b(0), c0, s(0), c1); --Sabira prva 2 bita
  adder1: Adder1bit port map (a(1), b(1), c1, s(1), c2); --Sabira druga 2 bita
  adder2: Adder1bit port map (a(2), b(2), c2, s(2), c3); -- Sabira treca 2 bita
  adder3: Adder1bit port map (a(3), b(3), c3, s(3), cout); -- Sabira cetvrta 2 bita i ostatak

end Behavioral;